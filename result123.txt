mac:work colorapple$ cat 1.py
# -*- coding:utf-8 -*-

from functools import reduce

def Result(x , y) :
    return x if x<y else y


l = [ 8 , 9 , 9 , 4 , 5 , 9, 3  , 2 , 1 ]
ret =reduce(Result,l)
print (ret)mac:work colorapple$ python3 1.py
1
mac:work colorapple$
mac:work colorapple$
mac:work colorapple$
mac:work colorapple$
mac:work colorapple$ cat 2.py
# -*- coding:utf-8 -*-

import tkinter as tk

def e2j(en):
    if en=='red':
        return u'빨강'
    elif en=='green':
        return u'초록'
    else:
        return u'파랑'


def change_bg(item, color):
    item.config(bg=color)
    for child in item.winfo_children():
        change_bg(child, color)



class MyWindow(tk.Frame):
    def __init__(self, master=None):
        #tk.Frame.__init__(self, master)
        super(MyWindow, self).__init__(master)
        self.width=300
        self.height=0
        self.canvas = tk.Canvas(self, width=self.width, height=self.height)
        #self.canvas = tk.Canvas(self)
        self.canvas.pack()
        self.pack()

        info = tk.Label(self, text=u'색상 변화를 보세요 ', font=('궁서체', '12', 'bold'))
        info.pack(padx=10, pady=5)

        f = tk.Frame(self)
        f.pack(padx=5, pady=5)

        self.sc = dict()
        for i, color in enumerate(['red', 'green', 'blue']):
            print(i)  # debug
            la = tk.Label(f, text=e2j(color), fg=color)
            la.grid(row=0, column=i, padx=10, pady=5)
            self.sc[color] = tk.Scale(f, from_=0, to=255, orient='v', command=self.M_change)
            self.sc[color].set(255)
            self.sc[color].grid(row=1, column=i, padx=10, pady=5)



    def M_change(self, event):
        color = '#%02X%02X%02X' % (self.sc['red'].get(), self.sc['green'].get(), self.sc['blue'].get())
        change_bg(self, color)



if __name__ == '__main__':
    root = tk.Tk()
    root.title('tk')
    app = MyWindow(root)
    root.mainloop()
    
    
mac:work colorapple$
mac:work colorapple$
mac:work colorapple$
mac:work colorapple$    
mac:work colorapple$ python3 2.py





mac:work colorapple$ cat 3.py
import sqlite3

conn = sqlite3.connect("Address.db")
cursor = conn.cursor()

cursor.execute("DROP TABLE if exists address")

cursor.execute("CREATE TABLE if not exists address(Id serial, Name text, addr text)")
cursor.execute("INSERT INTO address VALUES(1, 'Dominica', 'Seoul')")
cursor.execute("INSERT INTO address VALUES(2, 'RuRi', 'Toronto')")
cursor.execute("INSERT INTO address VALUES(3, 'Ruo', 'alberta')")

conn.commit()

cursor.execute("SELECT * FROM address")

for row in cursor:
	print ("%s 의 주소는 %s 입니다. " %(row[1], row[2]))

conn.close()mac:work colorapple$ python3 3.py
Dominica 의 주소는 Seoul 입니다.
RuRi 의 주소는 Toronto 입니다.
Ruo 의 주소는 alberta 입니다.
mac:work colorapple$ python3 3.py
Dominica 의 주소는 Seoul 입니다.
RuRi 의 주소는 Toronto 입니다.
Ruo 의 주소는 alberta 입니다.
mac:work colorapple$



